{
	"info": {
		"_postman_id": "8fbd0fb9-f852-4752-80cd-6f38bafa09aa",
		"name": "DataForTestcase",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register Org",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c1a93da5-c00a-4a35-b62b-a53283328c2f",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response have id\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"    ",
							"    //set token to global variable for later use",
							"    var orgRes = pm.response.json();",
							"    pm.globals.set(\"org_id\", orgRes.id);",
							"});",
							"",
							"pm.test(\"Response have pcucode\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link.keys.pcucode).to.eql(\"100145\");",
							"});",
							"",
							"pm.test(\"Response have new id from POST\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.not.eql(\"1459f3933d5e4ef8b0a68463c012f26b\");",
							"});",
							"",
							"pm.test(\"Response have new id of role:USER\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.not.eql(\"bdb8c14b3feb47dba0311cf6dd8233a6\");",
							"});",
							"",
							"pm.test(\"Response have new id of role:ORG\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.not.eql(\"5dc194a5b85b4733889247578e4bd5f0\");",
							"});",
							"",
							"pm.test(\"Response have timestamp from POST\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"2018-10-10\");",
							"    //#notUrgent timestamp POST แล้ว Response คนละ format #7",
							"    //pm.expect(jsonData.timestamp).to.eql(\"2018-06-28T17:17:43.645+07:00\");",
							"});",
							"",
							"pm.test(\"Response have timestamp of role:USER from POST\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"2018-10-10\");",
							"    //#notUrgent ",
							"    //pm.expect(jsonData.timestamp).to.eql(\"2018-06-28T07:14:43.645Z\");",
							"});",
							"",
							"pm.test(\"Response have timestamp of role:ORG from POST\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"2018-10-10\");",
							"    //#notUrgent",
							"    //pm.expect(jsonData.timestamp).to.eql(\"2018-06-28T14:19:29.645+07:00\");",
							"});",
							"",
							"pm.test(\"Response have link lastSync \", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(pm.response.text()).to.include(\"2018-10-10\");",
							"    //#notUrgent",
							"    //pm.expect(jsonData.link.lastSync).to.eql(\"2018-06-28T17:21:29.645+07:00\");",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"รพ.สต.เนคเทค\",\n  \"users\": [\n    {\n      \"name\": \"puy\",\n      \"password\": \"hipuy\",\n      \"role\": \"USER\",\n      \"id\": \"bdb8c14b3feb47dba0311cf6dd8233a6\",\n      \"type\": \"User\",\n      \"timestamp\": \"2018-10-10T14:14:43.645+07:00\"\n    },\n    {\n      \"name\": \"pcu100214.airsync\",\n      \"password\": \"a1e6-4f63e8295160\",\n      \"role\": \"ORG\",\n      \"id\": \"5dc194a5b85b4733889247578e4bd5f0\",\n      \"type\": \"User\",\n      \"timestamp\": \"2018-10-10T14:19:29.645+07:00\"\n    }\n  ],\n  \"link\": {\n    \"isSynced\": true,\n    \"lastSync\": \"2018-10-10T17:21:29.645+07:00\",\n    \"system\": \"JHICS\",\n    \"keys\": {\n      \"pcucode\": \"100145\"\n    }\n  },\n  \"id\": \"1459f3933d5e4ef8b0a68463c012f26b\",\n  \"type\": \"Organization\",\n  \"timestamp\": \"2018-10-10T17:17:43.645+07:00\"\n}"
				},
				"url": {
					"raw": "{{url}}/org",
					"host": [
						"{{url}}"
					],
					"path": [
						"org"
					]
				},
				"description": "ลงทะเบียนหน่วยงานสำเร็จ และสร้างตัวแปร Global เพื่อเก็บค่าไปใช้รันเทสลำดับต่อๆไป\n\n- ตัวแปร org_id เก็บ id\n\n\n***timestamp ต้องตรงกับ update date ของ JHCIS"
			},
			"response": [
				{
					"name": "Register Org",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"รพ.สต.เนคเทค\",\n  \"users\": [\n    {\n      \"name\": \"puy\",\n      \"password\": \"hipuy\",\n      \"role\": \"USER\",\n      \"id\": \"bdb8c14b3feb47dba0311cf6dd8233a6\",\n      \"type\": \"User\",\n      \"timestamp\": \"2018-10-10T14:14:43.645+07:00\"\n    },\n    {\n      \"name\": \"pcu100214.airsync\",\n      \"password\": \"a1e6-4f63e8295160\",\n      \"role\": \"ORG\",\n      \"id\": \"5dc194a5b85b4733889247578e4bd5f0\",\n      \"type\": \"User\",\n      \"timestamp\": \"2018-10-10T14:19:29.645+07:00\"\n    }\n  ],\n  \"link\": {\n    \"isSynced\": true,\n    \"lastSync\": \"2018-10-10T17:21:29.645+07:00\",\n    \"system\": \"JHICS\",\n    \"keys\": {\n      \"pcucode\": \"100145\"\n    }\n  },\n  \"id\": \"1459f3933d5e4ef8b0a68463c012f26b\",\n  \"type\": \"Organization\",\n  \"timestamp\": \"2018-10-10T17:17:43.645+07:00\"\n}"
						},
						"url": {
							"raw": "{{url}}/org",
							"host": [
								"{{url}}"
							],
							"path": [
								"org"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Date",
							"value": "Thu, 11 Oct 2018 07:40:30 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "572"
						},
						{
							"key": "Server",
							"value": "Jetty(9.4.z-SNAPSHOT)"
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						}
					],
					"cookie": [],
					"body": "{\n    \"name\": \"รพ.สต.เนคเทค\",\n    \"users\": [\n        {\n            \"name\": \"puy\",\n            \"role\": \"USER\",\n            \"roles\": [\n                \"USER\"\n            ],\n            \"id\": \"5bbefe6e72d96f0004b37bc0\",\n            \"type\": \"User\",\n            \"timestamp\": \"2018-10-10T14:14:43.645+07:00\",\n            \"bundle\": {}\n        },\n        {\n            \"name\": \"pcu100214.airsync\",\n            \"role\": \"ORG\",\n            \"roles\": [\n                \"ORG\"\n            ],\n            \"id\": \"5bbefe6e72d96f0004b37bc1\",\n            \"type\": \"User\",\n            \"timestamp\": \"2018-10-10T14:19:29.645+07:00\",\n            \"bundle\": {}\n        }\n    ],\n    \"link\": {\n        \"isSynced\": true,\n        \"lastSync\": \"2018-10-10T17:21:29.645+07:00\",\n        \"system\": \"JHICS\",\n        \"keys\": {\n            \"pcucode\": \"100145\"\n        }\n    },\n    \"id\": \"5bbefe6f72d96f0004b37bc2\",\n    \"type\": \"Organization\",\n    \"timestamp\": \"2018-10-10T17:17:43.645+07:00\"\n}"
				},
				{
					"name": "Register Org",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pcuCode\":\"145\",\n  \"name\": \"เนคเทค\",\n  \"uuid\": \"151b9\"\n}"
						},
						"url": {
							"raw": "{{url}}/org",
							"host": [
								"{{url}}"
							],
							"path": [
								"org"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"code\": \"145\",\n    \"name\": \"เนคเทค\",\n    \"uuid\": \"15169\",\n    \"token\": \"2314abc\",\n    \"id\": \"1\"\n}"
				}
			]
		},
		{
			"name": "Org Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "27330a9b-cc67-4964-81b5-f4aa40a31f98",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response have token\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"token\");",
							"    ",
							"    //set token to global variable for later use",
							"    var orgRes = pm.response.json();",
							"    pm.globals.set(\"org_token\", orgRes.token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "a1e6-4f63e8295160",
							"type": "string"
						},
						{
							"key": "username",
							"value": "pcu100214.airsync",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/org/{{org_id}}/authorize",
					"host": [
						"{{url}}"
					],
					"path": [
						"org",
						"{{org_id}}",
						"authorize"
					]
				},
				"description": "Login org ได้สำเร็จ \nสร้างตัวแปร Global เพื่อเก็บค่าไปใช้รันเทสลำดับต่อๆไป\n\nตัวแปร org_token เก็บ token"
			},
			"response": [
				{
					"name": "Login not success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW4wOjEyMzQ=",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/org/{{org_id}}/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"org",
								"{{org_id}}",
								"authorize"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Login success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"warning": ""
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW4wOjEyMzRhZG1pbjA=",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/org/15169/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"org",
								"15169",
								"authorize"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "",
							"name": "Access-Control-Allow-Credentials",
							"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "",
							"name": "Access-Control-Allow-Headers",
							"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "",
							"name": "Access-Control-Allow-Methods",
							"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*",
							"name": "Access-Control-Allow-Origin",
							"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
						},
						{
							"key": "Access-Control-Expose-Headers",
							"value": "",
							"name": "Access-Control-Expose-Headers",
							"description": "Lets a server whitelist headers that browsers are allowed to access."
						},
						{
							"key": "Connection",
							"value": "keep-alive",
							"name": "Connection",
							"description": "Options that are desired for the connection"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip",
							"name": "Content-Encoding",
							"description": "The type of encoding used on the data."
						},
						{
							"key": "Content-Length",
							"value": "162",
							"name": "Content-Length",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Tue, 20 Mar 2018 04:18:00 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "ETag",
							"value": "W/\"b6-oUGEoKt9RUUxcv8TyyY7wA\"",
							"name": "ETag",
							"description": "An identifier for a specific version of a resource, often a message digest"
						},
						{
							"key": "Server",
							"value": "nginx",
							"name": "Server",
							"description": "A name for the server"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding",
							"name": "Vary",
							"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
						}
					],
					"cookie": [],
					"body": "{\n\t\"token\": \"123abcdef\"\n}"
				},
				{
					"name": "Org Login",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/org/{{org_id}}/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"org",
								"{{org_id}}",
								"authorize"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Date",
							"value": "Thu, 11 Oct 2018 07:41:21 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "361"
						},
						{
							"key": "Server",
							"value": "Jetty(9.4.z-SNAPSHOT)"
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						}
					],
					"cookie": [],
					"body": "{\n    \"role\": \"USER\",\n    \"name\": \"\",\n    \"timestamp\": \"2018-10-11T14:41:21.939+07:00\",\n    \"createDate\": \"2018-10-11T14:41:21.939+07:00\",\n    \"expireDate\": \"2043-06-02T14:41:21.939+07:00\",\n    \"user\": {\n        \"name\": \"pcu100214.airsync\",\n        \"role\": \"ORG\",\n        \"roles\": [\n            \"ORG\"\n        ],\n        \"id\": \"5bbefe6e72d96f0004b37bc1\",\n        \"type\": \"User\",\n        \"timestamp\": \"2018-10-10T14:19:29.645+07:00\",\n        \"bundle\": {}\n    },\n    \"token\": \"5bbefea172d96f0004b37bc4\"\n}"
				}
			]
		},
		{
			"name": "Register Org 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "637d1a2e-7bd5-4d53-a93a-e4060278dbe2",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response have id\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"    ",
							"    //set token to global variable for later use",
							"    var orgRes = pm.response.json();",
							"    pm.globals.set(\"org_id_2\", orgRes.id);",
							"});",
							"",
							"pm.test(\"Response have pcucode\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.link.keys.pcucode).to.eql(\"100201\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"รพ.สต.บ้านยาง\",\n  \"users\": [\n    {\n      \"name\": \"admin1\",\n      \"password\": \"admin1\",\n      \"role\": \"USER\",\n      \"id\": \"bdb8c14b3feb47dba0311cf6ddadmin1\",\n      \"type\": \"User\",\n      \"timestamp\": \"2018-06-28T14:14:43.645+07:00\"\n    },\n    {\n      \"name\": \"pcu100210.airsyncorg2\",\n      \"password\": \"a1e6-4f63e8295160\",\n      \"role\": \"ORG\",\n      \"id\": \"5dc194a5b85b4733889247578eadmin1\",\n      \"type\": \"User\",\n      \"timestamp\": \"2018-06-28T14:19:29.645+07:00\"\n    }\n  ],\n  \"link\": {\n    \"isSynced\": true,\n    \"lastSync\": \"2018-06-28T17:21:29.645+07:00\",\n    \"system\": \"JHICS\",\n    \"keys\": {\n      \"pcucode\": 100201\n    }\n  },\n  \"id\": \"1459f3933d5e4ef8b0a68463c0admin1\",\n  \"type\": \"Organization\",\n  \"timestamp\": \"2018-06-28T17:17:43.645+07:00\"\n}"
				},
				"url": {
					"raw": "{{url}}/org",
					"host": [
						"{{url}}"
					],
					"path": [
						"org"
					]
				},
				"description": "ลงทะเบียนหน่วยงานสำเร็จ และสร้างตัวแปร Global เพื่อเก็บค่าไปใช้รันเทสลำดับต่อๆไป\n\n- ตัวแปร org_id เก็บ id\n\n\n***timestamp ต้องตรงกับ update date ของ JHCIS"
			},
			"response": [
				{
					"name": "Register Org",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pcuCode\":\"145\",\n  \"name\": \"เนคเทค\",\n  \"uuid\": \"151b9\"\n}"
						},
						"url": {
							"raw": "{{url}}/org",
							"host": [
								"{{url}}"
							],
							"path": [
								"org"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n    \"code\": \"145\",\n    \"name\": \"เนคเทค\",\n    \"uuid\": \"15169\",\n    \"token\": \"2314abc\",\n    \"id\": \"1\"\n}"
				}
			]
		},
		{
			"name": "Org Login 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "27330a9b-cc67-4964-81b5-f4aa40a31f98",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response have token\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"token\");",
							"    ",
							"    //set token to global variable for later use",
							"    var orgRes = pm.response.json();",
							"    pm.globals.set(\"org_token\", orgRes.token);",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "pcu100210.airsyncorg2",
							"type": "string"
						},
						{
							"key": "password",
							"value": "a1e6-4f63e8295160",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/org/{{org_id_2}}/authorize",
					"host": [
						"{{url}}"
					],
					"path": [
						"org",
						"{{org_id_2}}",
						"authorize"
					]
				},
				"description": "Login org ได้สำเร็จ \nสร้างตัวแปร Global เพื่อเก็บค่าไปใช้รันเทสลำดับต่อๆไป\n\nตัวแปร org_token เก็บ token"
			},
			"response": [
				{
					"name": "Login not success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic YWRtaW4wOjEyMzQ=",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/org/{{org_id}}/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"org",
								"{{org_id}}",
								"authorize"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Login success",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"warning": ""
							},
							{
								"key": "Authorization",
								"value": "Basic YWRtaW4wOjEyMzRhZG1pbjA=",
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman."
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}/org/15169/authorize",
							"host": [
								"{{url}}"
							],
							"path": [
								"org",
								"15169",
								"authorize"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Access-Control-Allow-Credentials",
							"value": "",
							"name": "Access-Control-Allow-Credentials",
							"description": "Indicates whether or not the response to the request can be exposed when the credentials flag is true. When used as part of a response to a preflight request, this indicates whether or not the actual request can be made using credentials."
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "",
							"name": "Access-Control-Allow-Headers",
							"description": "Used in response to a preflight request to indicate which HTTP headers can be used when making the actual request."
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "",
							"name": "Access-Control-Allow-Methods",
							"description": "Specifies the method or methods allowed when accessing the resource. This is used in response to a preflight request."
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*",
							"name": "Access-Control-Allow-Origin",
							"description": "Specifies a URI that may access the resource. For requests without credentials, the server may specify '*' as a wildcard, thereby allowing any origin to access the resource."
						},
						{
							"key": "Access-Control-Expose-Headers",
							"value": "",
							"name": "Access-Control-Expose-Headers",
							"description": "Lets a server whitelist headers that browsers are allowed to access."
						},
						{
							"key": "Connection",
							"value": "keep-alive",
							"name": "Connection",
							"description": "Options that are desired for the connection"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip",
							"name": "Content-Encoding",
							"description": "The type of encoding used on the data."
						},
						{
							"key": "Content-Length",
							"value": "162",
							"name": "Content-Length",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Tue, 20 Mar 2018 04:18:00 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "ETag",
							"value": "W/\"b6-oUGEoKt9RUUxcv8TyyY7wA\"",
							"name": "ETag",
							"description": "An identifier for a specific version of a resource, often a message digest"
						},
						{
							"key": "Server",
							"value": "nginx",
							"name": "Server",
							"description": "A name for the server"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding",
							"name": "Vary",
							"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
						}
					],
					"cookie": [],
					"body": "{\n\t\"token\": \"123abcdef\"\n}"
				}
			]
		},
		{
			"name": "Register User Default",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4e552b2c-0a24-442c-aa2a-fbc9931bf663",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{org_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n  {\n    \"name\": \"adm\",\n    \"password\": \"mda\",\n    \"role\": \"USER\",\n    \"id\": \"1238c14b3feb47dba0311cf6dd823331\",\n    \"type\": \"User\",\n    \"timestamp\": \"2018-08-21T14:14:43.645+07:00\"\n  },\n  {\n    \"name\": \"Drag_Store_Admin\",\n    \"password\": \"12345\",\n    \"role\": \"USER\",\n    \"id\": \"456194a5b85b4733889247578e4bd531\",\n    \"type\": \"User\",\n    \"timestamp\": \"2018-08-2T14:19:29.645+07:00\"\n  },\n  {\n    \"name\": \"newuser\",\n    \"password\": \"newuser\",\n    \"role\": \"USER\",\n    \"id\": \"789194a5b85b4733889247578e4bd531\",\n    \"type\": \"User\",\n    \"timestamp\": \"2018-08-21T14:30:29.645+07:00\"\n  },\n  {\n    \"name\": \"usr_db\",\n    \"password\": \"12345\",\n    \"role\": \"USER\",\n    \"id\": \"789194a5b85b4733889247578e4abc31\",\n    \"type\": \"User\",\n    \"timestamp\": \"2018-08-21T14:30:29.645+07:00\"\n  }\n]"
				},
				"url": {
					"raw": "{{url}}/org/{{org_id}}/user",
					"host": [
						"{{url}}"
					],
					"path": [
						"org",
						"{{org_id}}",
						"user"
					]
				},
				"description": "ลงทะเบียนผู้ใช้งานสำเร็จ"
			},
			"response": []
		},
		{
			"name": "Delete ข้อมูลของ org status 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "720cd59d-dee7-4f63-b145-3475bf1a28ef",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{org_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/org/{{org_id}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"org",
						"{{org_id}}"
					]
				}
			},
			"response": []
		}
	]
}